@model SIGEM_BIDSS.Models.tbPuesto

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>
    .validation-error {
        color: red;
        font-size: small;
    }

    .validation-summary-errors {
        color: red;
        font-size: small;
    }

    .required:after {
        content: "*";
        font-weight: bold;
        color: red;
    }

    #pto_Descripcion {
        text-transform: uppercase;
    }
</style>





<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>tbPuesto</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.pto_Id)




        <div class="form-group">
            @Html.LabelFor(model => model.are_Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.are_Id, (SelectList)ViewBag.Area, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.are_Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pto_Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.pto_Descripcion, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", @onkeypress = "return soloLetras(event)", @onkeyup = "this.value=this.value.toUpperCase()" } })
                @Html.ValidationMessageFor(model => model.pto_Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    ///validar solo letras
    function soloLetras(e) {
        key = e.keyCode || e.which;
        tecla = String.fromCharCode(key).toLowerCase();
        letras = "'/áéíóúabcdefghijklmnñopqrstuvwxyz";
        especiales = "8-37-39-46";

        tecla_especial = false
        for (var i in especiales) {
            if (key == especiales[i]) {
                tecla_especial = true;
                break;
            }
        }

        if (letras.indexOf(tecla) == -1 && !tecla_especial) {
            return false;
        }
    }

    ///validar not copy paste///
    window.onload =
        function () {
            var myInput1 = document.getElementById('pto_Descripcion');
            myInput1.onpaste = function (e) {
                e.preventDefault();
                //alert("esta acción está prohibida");
            }

            myInput1.oncopy = function (e) {
                e.preventDefault();
                //alert("esta acción está prohibida");
            }
        }
</script>
