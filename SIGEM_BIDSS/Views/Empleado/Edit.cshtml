@model SIGEM_BIDSS.Models.tbEmpleado

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    var test = new SIGEM_BIDSS.Models.tbMunicipio();
}
@*<link href="~/Content/template/plugins/datepicker/datepicker3.css" rel="stylesheet" />*@
<link href="~/Content/template/plugins/datepicker/css/bootstrap-datepicker3.min.css" rel="stylesheet" />
<div class="card card-primary card-outline">
    <div class="card-header d-flex p-0 ui-sortable-handle">
        <h3 class="card-title p-3">
            <i class="fa fa-upload mr-1"></i>
            Editar Empleado
        </h3>
        <ul class="nav nav-pills ml-auto p-2">
            <li class="nav-item">
                @Html.ActionLink("Regresar", "Index", null, new { @class = "btn btn-primary" })
            </li>
        </ul>
    </div>

    @using (Html.BeginForm("Edit", "Empleado", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.HiddenFor(model => model.emp_UsuarioCrea, new { Value = "1" })
        @Html.HiddenFor(model => model.emp_FechaCrea, new { Value = "2019-11-11" })
        @Html.HiddenFor(model => model.emp_UsuarioModifica, new { Value = "1" })
        @Html.HiddenFor(model => model.emp_FechaModifica, new { Value = "2019-12-12" })
        @Html.HiddenFor(model => model.emp_RazonInactivacion, new { Value = "----" })
        @Html.HiddenFor(model => model.emp_FechaIngreso, new { Value = "----" })
        @Html.HiddenFor(model => model.emp_PathImage, new { Value = "----" })

    <div class="form-horizontal">
        <div class="form-horizontal">

            @Html.AntiForgeryToken()
            <div class="card-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.emp_Id)

                <div class="row">
                    <div class="col-md-7">
                        <div class="form-group col-md-6">
                            <div class="card-body box-profile">
                                <div class="text-center">
                                    @{if (Model.emp_PathImage != null && Model.emp_PathImage != "")
                                        {
                                            <img src="@Url.Content(Model.emp_PathImage)" class="product-image" id="imgpreview" width="280" height="230" style="border-width: 0px;" />
                                        }
                                        else
                                        {
                                            <img src="~/Content/img/descarga.jpg" class="product-image img-circle" id="imgpreview" width="280" height="230" style="border-width: 0px;" />
                                        }}
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.emp_PathImage, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="input-group">
                                    <div class="custom-file">
                                        <input id="CargarFoto" value="Cargar Fotografía" name="FotoPath" type="file" class="custom-file-input" id="exampleInputFile">

                                        <label class="custom-file-label" for="exampleInputFile">@Url.Content(Model.emp_PathImage)</label>
                                    </div>
                                    <div class="input-group-append">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <form>
                        <div class="form-row">
                            <div class="form-group col-md-4">

                                @Html.LabelFor(model => model.emp_Nombres, htmlAttributes: new { @class = "control-label col-md-4" })
                                @Html.EditorFor(model => model.emp_Nombres, new { htmlAttributes = new { @class = "form-control", @style = "text-transform:uppercase;", @OnKeyPress = "return soloLetras(event)" } })
                                @Html.ValidationMessageFor(model => model.emp_Nombres, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.emp_Apellidos, htmlAttributes: new { @class = "control-label col-md-4" })
                                @Html.EditorFor(model => model.emp_Apellidos, new { htmlAttributes = new { @class = "form-control", @OnKeyPress = "return soloLetras(event)", @style = "text-transform:uppercase;" } })
                                @Html.ValidationMessageFor(model => model.emp_Apellidos, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.emp_Sexo, htmlAttributes: new { @class = "control-label col-md-4" })

                                @Html.DropDownList("emp_Sexo", null, htmlAttributes: new { @class = "form-control" })

                                <p style="color:red">@Html.ValidationMessageFor(model => model.emp_Sexo)</p>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.emp_FechaNacimiento, htmlAttributes: new { @class = "control-label col-md-6" })

                                @Html.EditorFor(model => model.emp_FechaNacimiento, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.emp_FechaNacimiento, "", new { @class = "text-danger" })

                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.emp_Identificacion, htmlAttributes: new { @class = "control-label col-md-5" })

                                @Html.EditorFor(model => model.emp_Identificacion, new { htmlAttributes = new { @class = "form-control", @OnKeyPress = "return soloNumeros(event)" } })
                                @Html.ValidationMessageFor(model => model.emp_Identificacion, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.emp_Telefono, htmlAttributes: new { @class = "control-label col-md-5" })

                                @Html.EditorFor(model => model.emp_Telefono, new { htmlAttributes = new { @class = "form-control", @OnKeyPress = "return soloNumeros(event)" } })
                                @Html.ValidationMessageFor(model => model.emp_Telefono, "", new { @class = "text-danger" })

                            </div>
                        </div>


                        <div class="form-row">

                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.emp_CorreoElectronico, htmlAttributes: new { @class = "control-label col-md-7" })

                                @Html.EditorFor(model => model.emp_CorreoElectronico, new { htmlAttributes = new { @class = "form-control" } })
                                <p id="emailOK" style="color:red">@Html.ValidationMessageFor(model => model.emp_CorreoElectronico, "", new { @class = "text-danger" })</p>

                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.tps_Id, htmlAttributes: new { @class = "control-label col-md-6" })

                                @Html.DropDownList("tps_Id", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.tps_Id, "", new { @class = "text-danger" })

                            </div>


                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.pto_Id, htmlAttributes: new { @class = "control-label col-md-6" })

                                @Html.DropDownList("pto_Id", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.pto_Id, "", new { @class = "text-danger" })

                            </div>
                        </div>
                        <div class="form-row">

                            @*<div class="form-group col-md-4">
                            @Html.LabelFor(model => model.emp_FechaIngreso, htmlAttributes: new { @class = "control-label col-md-6" })

                            @Html.EditorFor(model => model.emp_FechaIngreso, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.emp_FechaIngreso, "", new { @class = "text-danger" })

                        </div>*@

                            <div class="form-group col-md-12">
                                @Html.LabelFor(model => model.emp_Direccion, htmlAttributes: new { @class = "control-label col-md-6" })

                                @Html.EditorFor(model => model.emp_Direccion, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.emp_Direccion, "", new { @class = "text-danger" })

                            </div>


                            @*<div class="form-group col-md-4">
                            @Html.LabelFor(model => model.est_Id, htmlAttributes: new { @class = "control-label col-md-6" })

                            @Html.DropDownList("est_Id", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.est_Id, "", new { @class = "text-danger" })

                        </div>*@
                        </div>

                        <div class="form-row">
                            @*<div class="form-group col-md-4">
                            @Html.LabelFor(model => model.emp_RazonInactivacion, htmlAttributes: new { @class = "control-label col-md-6" })

                            @Html.EditorFor(model => model.emp_RazonInactivacion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.emp_RazonInactivacion, "", new { @class = "text-danger" })

                        </div>*@


                        </div>
                        <div class="form-row">

                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label class="control-label col-md-4">Departamento@*<span style="color:red"> *</span>*@</label>
                                @Html.DropDownList("dep_Codigo", null, "Seleccione Departamento", htmlAttributes: new { @class = "form-control" })
                                <p id="Departamento" style="color:red">@Html.ValidationMessageFor(muni => test.dep_codigo)</p>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.mun_Id, "Municipio", new { @class = "control-label col-md-}6" })
                                @Html.DropDownList("mun_Id", null, "Seleccione Municipios", htmlAttributes: new { @class = "form-control" })
                                <p id="Municipio" style="color:red">@Html.ValidationMessageFor(model => model.mun_Id)</p>
                            </div>
                        </div>






                        <div class="form-group">
                            <div class="col-md-offset-4 col-md-10">
                                <input type="submit" value="Guardar" class="btn btn-primary" />
                                @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-default" })
                            </div>
                        </div>

                    </form>
                </div>
            </div>
        </div>
    </div>

    }

    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Content/template/plugins/datepicker/js/bootstrap-datepicker.min.js"></script>
    <script src="~/Scripts/app/Empleados.js"></script>
    <script src="~/Content/template/plugins/bs-custom-file-input/bs-custom-file-input.min.js"></script>
    <script src="~/Content/template/plugins/input-mask/jquery.inputmask.js"></script>

    <script type="text/javascript">
        $('#emp_Telefono').inputmask('(999) 9999-9999')
    </script>

</div>
        </div>
